package ex01_one_dim;

import java.util.Arrays;

public class Ex03_array {

	public static void main(String[] args) {
		
		// 배열의 데이터타입
		// int[] : 참조 타입(Reference Type)

		
		/*
		 int[] arr = { 10000, 20000, 30000 };
		 
		 	  |-------|
		 arr  | 0x123 |
		 	  |-------|
		 	  |  ...  |
		 	  |-------|
	   arr[0] | 10000 | 0x123(참조값)      	// 123번지에 있는 요소 0
	   		  |-------|
	   arr[1] | 20000 |						// 123번지에서 한 칸[1] 떨어져 있다
	   		  |-------|
	   arr[2] | 30000 | 					// 123번지에서 두 칸[2] 떨어져 있다
		 	  |-------|
		 */
		
		
			// 배열의 길이 늘리기
			// 1. 배열의 길이는 변경할 수 없다. 사용하던 배열을 늘리거나 줄이기는 불가능.
			//   								길이가 늘어나도 코드 이름은 arr로 유지
			// 2. 늘어난 길이의 새로운 배열을 만들고,
			//		기존 배열의 값을 모두 새로운 배열로 옮기고,
			//		기존 배열의 참조값을 새로운 배열의 참조값으로 수정한다.
			//		그래야 이름은 그대로 쓰면서 길이가 늘어난 배열을 사용.
		
			// 길이가 5인 배열을 사용하다가
			// 길이가 1000인 배열로 바꾸기
			int[] arr = {1, 2, 3, 4, 5};
			
			// 늘어난 길이의 새로운 배열을 만들고
			int[] temp = new int[1000];
		
			// 기존 배열의 값을 모두 새로운 배열로 옮기고
			System.arraycopy(arr, 0, temp, 0, arr.length);     // arr 0에 있는걸 temp 0으로 옮기는 것이 시작, 길이만큼 옮겨라(5)		
	
			// 기존 배열의 참조값을 새로운 배열의 참조값으로 수정한다
			arr = temp;
			
			// 이제 arr 배열의 길이는 1000이다.
			System.out.println(arr.length);
			System.out.println(Arrays.toString(arr));		// 알아서 배열의 모습을 문자열로 바꿈

	
			// 기존배열int[] arr = {1, 2, 3, 4, 5};은 어디로? -> 메모리 누수 발생..!! 선언을 해서 잡혀있는 공간인데 아무도 못 쓰는 공간.
			// java는 메모리 누수 공간을 스스로 해결함
			
			
	}

}
