<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.app15.mapper.CommentMapper">

	<select id="selectCommentCount" parameterType="int" resultType="int">
		SELECT COUNT(*)
		  FROM COMMENTS
		 WHERE BLOG_NO = #{blogNo}
		   <!-- AND STATE = 1 -->
	</select>
	
	<!-- 받아오는 파라미터 타입은 commentDTO (content와 blogNo만 가져오긴함) -->
	<insert id="insertComment" parameterType="CommentDTO">
		INSERT INTO COMMENTS
			(COMMENT_NO, BLOG_NO, CONTENT, STATE, DEPTH, GROUP_NO, CREATE_DATE)
		VALUES
			(COMMENTS_SEQ.NEXTVAL, #{blogNo}, #{content}, 1, 0, COMMENTS_SEQ.CURRVAL, SYSDATE)
	</insert>
	<!-- 사실상 comment_no == group_no. currval쓰니까 -->
	
	<!-- 
		댓글 목록, 파라미터는 map으로. 1단 계층이라 그룹오더가 없음! 다단일때만 필요함 
		 뎁스가 0이면 밖에, 뎁스가 1인 애(답댓)는 안으로. 같은 그룹이면 depth기준 오름차순. 먼저 작성한 댓글이 위로 올라오려면 group_no는 내림차순 
		 GROUP_NO 정렬먼저
		 
		 여러개 
		 
		★ 댓글단 사람의 닉네임을 가져오고 그 닉네임을 가진 작성자만 삭제가능하게 하려면 : user 테이블과의 join이 필요함 ★
		
		대댓 : CREATE_DATE 오름차순으로~
	-->
	<select id="selectCommentList" parameterType="Map" resultType="CommentDTO">
		SELECT A.ROW_NUM, A.COMMENT_NO, A.BLOG_NO, A.CONTENT, A.STATE, A.DEPTH, A.GROUP_NO, A.CREATE_DATE
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY GROUP_NO DESC, DEPTH ASC, CREATE_DATE DESC) AS ROW_NUM, COMMENT_NO, BLOG_NO, CONTENT, STATE, DEPTH, GROUP_NO, CREATE_DATE
		          FROM COMMENTS
		         WHERE BLOG_NO = #{blogNo}) A
	 	 WHERE A.ROW_NUM BETWEEN #{begin} AND #{end}
	</select>
	<!-- 사용자를 외래키인 ID가 아닌 NICKNAME이 있으면 그걸 JOIN으로 해보길~ -->
	
	
	<!-- 댓글삭제 : update (STATE = -1 삭제) -->
	<update id="deleteComment" parameterType="int">
		UPDATE COMMENTS
		   SET STATE = -1
		 WHERE COMMENT_NO = #{commentNo}   
	</update>
	
	<!-- 답글 넣기~~~~~~ -->
	<insert id="insertReply" parameterType="CommentDTO">
		INSERT INTO COMMENTS
			(COMMENT_NO, BLOG_NO, CONTENT, STATE, DEPTH, GROUP_NO, CREATE_DATE)
		VALUES
			(COMMENTS_SEQ.NEXTVAL, #{blogNo}, #{content}, 1, 1, #{groupNo}, SYSDATE)
	</insert>
	
	
</mapper>